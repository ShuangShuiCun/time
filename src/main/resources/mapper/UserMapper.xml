<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ljf.time.dao.UserMapper" >
  <resultMap id="UserMap" type="cn.ljf.time.model.User" >
    <id column="USER_ID" property="userId" jdbcType="CHAR" />
    <result column="AREA_ID" property="areaId" jdbcType="DECIMAL" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="AVATAR_FILE" property="avatarFile" jdbcType="VARCHAR" />
    <result column="REGISTER_DATE" property="registerDate" jdbcType="TIMESTAMP" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="USER_PASSWORD" property="userPassword" jdbcType="CHAR" />
    <result column="PERMISSIONS" property="permissions" jdbcType="VARCHAR" />
    <result column="ROLENAME" property="rolename" jdbcType="VARCHAR" />
  </resultMap>

  <select id="selectByEmail" resultMap="UserMap" parameterType="cn.ljf.time.model.User" >
    select 
    user_id, area_id, email, avatar_file, register_date, remark, username, user_password, permissions, rolename
    from TB_USER
    where email = #{email}
  </select>

  <select id="getUser" resultMap="UserMap" parameterType="cn.ljf.time.model.User" >
    select * from TB_USER
  </select>

  <select id="selectRoleByEmail" resultType="String" parameterType="String" >
    select
     rolename
    from TB_USER
    where email = #{email}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="cn.ljf.time.model.User" >
    delete from TB_USER
    where USER_ID = #{userId,jdbcType=CHAR}
  </delete>

  <insert id="insertUser" parameterType="cn.ljf.time.model.User" >
    insert into TB_USER (USER_ID, AREA_ID, EMAIL, 
      AVATAR_FILE, REGISTER_DATE, REMARK, 
      USERNAME, USER_PASSWORD, PERMISSIONS, 
      ROLENAME)
    values (#{userId,jdbcType=CHAR}, #{areaId,jdbcType=DECIMAL}, #{email,jdbcType=VARCHAR}, 
      #{avatarFile,jdbcType=VARCHAR}, #{registerDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{userPassword,jdbcType=CHAR}, #{permissions,jdbcType=VARCHAR}, 
      #{rolename,jdbcType=VARCHAR})
  </insert>


  <insert id="insertSelective" parameterType="cn.ljf.time.model.User" >
    insert into TB_USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="areaId != null" >
        AREA_ID,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="avatarFile != null" >
        AVATAR_FILE,
      </if>
      <if test="registerDate != null" >
        REGISTER_DATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="userPassword != null" >
        USER_PASSWORD,
      </if>
      <if test="permissions != null" >
        PERMISSIONS,
      </if>
      <if test="rolename != null" >
        ROLENAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="areaId != null" >
        #{areaId,jdbcType=DECIMAL},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatarFile != null" >
        #{avatarFile,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null" >
        #{registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=CHAR},
      </if>
      <if test="permissions != null" >
        #{permissions,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ljf.time.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TB_USER
    <set >
      <if test="areaId != null" >
        AREA_ID = #{areaId,jdbcType=DECIMAL},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatarFile != null" >
        AVATAR_FILE = #{avatarFile,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null" >
        REGISTER_DATE = #{registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        USER_PASSWORD = #{userPassword,jdbcType=CHAR},
      </if>
      <if test="permissions != null" >
        PERMISSIONS = #{permissions,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        ROLENAME = #{rolename,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ljf.time.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TB_USER
    set AREA_ID = #{areaId,jdbcType=DECIMAL},
      EMAIL = #{email,jdbcType=VARCHAR},
      AVATAR_FILE = #{avatarFile,jdbcType=VARCHAR},
      REGISTER_DATE = #{registerDate,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR},
      USERNAME = #{username,jdbcType=VARCHAR},
      USER_PASSWORD = #{userPassword,jdbcType=CHAR},
      PERMISSIONS = #{permissions,jdbcType=VARCHAR},
      ROLENAME = #{rolename,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=CHAR}
  </update>
</mapper>